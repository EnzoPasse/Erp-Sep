{"version":3,"sources":["./src/main/webapp/app/login/login.module.ts","./src/main/webapp/app/login/login.route.ts","./src/main/webapp/app/login/login.component.ts","./src/main/webapp/app/login/login.component.html"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { LOGIN_ROUTE } from './login.route';\r\nimport { LoginComponent } from './login.component';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild([LOGIN_ROUTE])],\r\n  declarations: [LoginComponent],\r\n})\r\nexport class LoginModule {}\r\n","import { Route } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nexport const LOGIN_ROUTE: Route = {\r\n  path: '',\r\n  component: LoginComponent,\r\n};\r\n","import { Component, ViewChild, OnInit, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from 'app/login/login.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { collapseTextChangeRangesAcrossMultipleVersions } from 'typescript';\r\n\r\n@Component({\r\n  selector: 'jhi-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('username', { static: false })\r\n  username?: ElementRef;\r\n\r\n  authenticationError = false;\r\n\r\n  periods: any[] = [];\r\n\r\n  loginForm = this.fb.group({\r\n    username: [null, [Validators.required]],\r\n    password: [null, [Validators.required]],\r\n    periodo: [null, [Validators.required]],\r\n    rememberMe: [false],\r\n  });\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // load the accounting periods\r\n    this.accountService.getAllPeriod().subscribe(period => (this.periods = period));\r\n\r\n    // if already authenticated then navigate to home page\r\n    this.accountService.identity().subscribe(() => {\r\n      if (this.accountService.isAuthenticated()) {\r\n        this.router.navigate(['']);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.username) {\r\n      this.username.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  login(): void {\r\n    this.loginService\r\n      .login({\r\n        nombre: this.loginForm.get('username')!.value,\r\n        clave: this.loginForm.get('password')!.value,\r\n        idPeriodoContable: this.loginForm.get('periodo')!.value.id,\r\n        rememberMe: this.loginForm.get('rememberMe')!.value,\r\n      })\r\n      .subscribe(\r\n        () => {\r\n          this.authenticationError = false;\r\n          if (!this.router.getCurrentNavigation()) {\r\n            // There were no routing during login (eg from navigationToStoredUrl)\r\n            this.router.navigate(['']);\r\n          }\r\n        },\r\n        () => (this.authenticationError = true)\r\n      );\r\n\r\n    //this.router.navigate(['']);\r\n  }\r\n}\r\n","<!--  JHISPTER\r\n<div>\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-lg-6 col-md-8 col-sm-10\">\r\n      <h1 data-cy=\"loginTitle\">Sign in</h1>\r\n      <div class=\"alert alert-danger\" *ngIf=\"authenticationError\" data-cy=\"loginError\">\r\n        <strong>Failed to sign in!</strong> Please check your credentials and try again.\r\n      </div>\r\n      <form class=\"form\" role=\"form\" (ngSubmit)=\"login()\" [formGroup]=\"loginForm\">\r\n        <div class=\"form-group\">\r\n          <label class=\"username-label\" for=\"username\">Login</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control\"\r\n            name=\"username\"\r\n            id=\"username\"\r\n            placeholder=\"Your username\"\r\n            formControlName=\"username\"\r\n            #username\r\n            data-cy=\"username\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            class=\"form-control\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Your password\"\r\n            formControlName=\"password\"\r\n            data-cy=\"password\"\r\n          />\r\n        </div>\r\n\r\n        <div class=\"form-check\">\r\n          <label class=\"form-check-label\" for=\"rememberMe\">\r\n            <input class=\"form-check-input\" type=\"checkbox\" name=\"rememberMe\" id=\"rememberMe\" formControlName=\"rememberMe\" />\r\n            <span>Remember me</span>\r\n          </label>\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\" data-cy=\"submit\">Sign in</button>\r\n      </form>\r\n      <div class=\"mt-3 alert alert-warning\">\r\n        <a class=\"alert-link\" routerLink=\"/account/reset/request\" data-cy=\"forgetYourPasswordSelector\">Did you forget your password?</a>\r\n      </div>\r\n\r\n      <div class=\"alert alert-warning\">\r\n        <span>You don't have an account yet?</span>\r\n        <a class=\"alert-link\" routerLink=\"/account/register\">Register a new account</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n -->\r\n\r\n<div class=\"login-register\" style=\"background-image: url(content/images/bg-financial.jpg)\">\r\n  <div class=\"login-register-box\">\r\n    <mat-card>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\">\r\n          <div class=\"text-center\">\r\n            <img alt=\"homepage\" src=\"content/images/logo-icon.png\" />\r\n            <h4 class=\"m-t-0\">Ingresar a ERP-SEP</h4>\r\n          </div>\r\n\r\n          <div fxLayout=\"row wrap\">\r\n            <!-- col full-->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Usuario </mat-label>\r\n                <input matInput [formControl]=\"loginForm.controls['username']\" #username />\r\n              </mat-form-field>\r\n              <small\r\n                *ngIf=\"loginForm.controls['username'].hasError('required') && loginForm.controls['username'].touched\"\r\n                class=\"text-danger support-text\"\r\n                >Usuario necesario.</small\r\n              >\r\n            </div>\r\n            <!-- col full-->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label>Contraseña </mat-label>\r\n                <input matInput type=\"password\" [formControl]=\"loginForm.controls['password']\" />\r\n              </mat-form-field>\r\n              <small\r\n                *ngIf=\"loginForm.controls['password'].hasError('required') && loginForm.controls['password'].touched\"\r\n                class=\"text-danger support-text\"\r\n                >Contraseña requerido.</small\r\n              >\r\n            </div>\r\n\r\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n              <mat-form-field appearance=\"outline\">\r\n                <mat-label for=\"select\">Periodo Contable </mat-label>\r\n                <mat-select formControlName=\"periodo\" aria-describedby=\"periodoHelp\">\r\n                  <mat-option disabled selected [value]=\"\">Período del Ejercicio Contable</mat-option>\r\n                  <mat-option *ngFor=\"let item of periods\" [value]=\"item\"\r\n                    >{{ item.nombre }} <small>[{{ item.fechaDesde }} - {{ item.fechaHasta }}]</small></mat-option\r\n                  >\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <small\r\n                *ngIf=\"loginForm.controls['periodo'].hasError('required') && loginForm.controls['periodo'].touched\"\r\n                class=\"text-danger support-text\"\r\n                >Periodo requerido.</small\r\n              >\r\n            </div>\r\n\r\n            <!-- col half-->\r\n            <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\">\r\n              <mat-checkbox color=\"warn\" formControlName=\"rememberMe\">Recuérdame</mat-checkbox>\r\n            </div>\r\n            <!-- col half-->\r\n            <!--   <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\" class=\"text-right\">\r\n                          <a [routerLink]=\"['/authentication/forgot']\" class=\"link\">Forgot pwd?</a>\r\n                      </div> -->\r\n            <!-- col full-->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\r\n              <button mat-raised-button color=\"primary\" class=\"btn-block btn-lg m-t-20 m-b-20\" type=\"submit\" [disabled]=\"!loginForm.valid\">\r\n                Login\r\n              </button>\r\n            </div>\r\n            <!-- col full-->\r\n            <!--  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"text-center\">\r\n                          <span>Don't have an account?\r\n                              <a [routerLink]=\"['/authentication/register']\" class=\"text-info link\">Register</a>\r\n                          </span>\r\n                      </div> -->\r\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\" class=\"text-center\">\r\n              <span class=\"text-center text-danger\" *ngIf=\"authenticationError\"> <strong> Credenciales incorrectas</strong></span>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}