{"version":3,"sources":["./src/main/webapp/app/config/pagination.constants.ts","./src/main/webapp/app/admin/user-management/service/user-management.service.ts","./src/main/webapp/app/admin/user-management/detail/user-management-detail.component.html","./src/main/webapp/app/admin/user-management/detail/user-management-detail.component.ts","./src/main/webapp/app/admin/user-management/delete/user-management-delete-dialog.component.html","./src/main/webapp/app/admin/user-management/delete/user-management-delete-dialog.component.ts","./src/main/webapp/app/admin/user-management/list/user-management.component.ts","./src/main/webapp/app/admin/user-management/list/user-management.component.html","./src/main/webapp/app/admin/user-management/update/user-management-update.component.ts","./src/main/webapp/app/admin/user-management/update/user-management-update.component.html","./src/main/webapp/app/admin/user-management/user-management.model.ts","./src/main/webapp/app/core/request/request-util.ts","./src/main/webapp/app/admin/user-management/user-management.route.ts","./src/main/webapp/app/admin/user-management/user-management.module.ts"],"names":[],"mappings":"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","file":"user-management-user-management-module.js","sourcesContent":["export const ITEMS_PER_PAGE = 20;\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport { createRequestOption } from 'app/core/request/request-util';\r\nimport { Pagination } from 'app/core/request/request.model';\r\nimport { IUser } from '../user-management.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserManagementService {\r\n  public resourceUrl = this.applicationConfigService.getEndpointFor('api/admin/users');\r\n\r\n  constructor(private http: HttpClient, private applicationConfigService: ApplicationConfigService) {}\r\n\r\n  create(user: IUser): Observable<IUser> {\r\n    return this.http.post<IUser>(this.resourceUrl, user);\r\n  }\r\n\r\n  update(user: IUser): Observable<IUser> {\r\n    return this.http.put<IUser>(this.resourceUrl, user);\r\n  }\r\n\r\n  find(login: string): Observable<IUser> {\r\n    return this.http.get<IUser>(`${this.resourceUrl}/${login}`);\r\n  }\r\n\r\n  query(req?: Pagination): Observable<HttpResponse<IUser[]>> {\r\n    const options = createRequestOption(req);\r\n    return this.http.get<IUser[]>(this.resourceUrl, { params: options, observe: 'response' });\r\n  }\r\n\r\n  delete(login: string): Observable<{}> {\r\n    return this.http.delete(`${this.resourceUrl}/${login}`);\r\n  }\r\n\r\n  authorities(): Observable<string[]> {\r\n    return this.http.get<string[]>(this.applicationConfigService.getEndpointFor('api/authorities'));\r\n  }\r\n}\r\n","<div class=\"row justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <div *ngIf=\"user\">\r\n      <h2>\r\n        <span>User</span> [<strong>{{ user.login }}</strong\r\n        >]\r\n      </h2>\r\n\r\n      <dl class=\"row-md jh-entity-details\">\r\n        <dt><span>Login</span></dt>\r\n        <dd>\r\n          <span>{{ user.login }}</span>\r\n          <span *ngIf=\"user.activated\" class=\"badge badge-success\">Activated</span>\r\n          <span *ngIf=\"!user.activated\" class=\"badge badge-danger\">Deactivated</span>\r\n        </dd>\r\n\r\n        <dt><span>First Name</span></dt>\r\n        <dd>{{ user.firstName }}</dd>\r\n\r\n        <dt><span>Last Name</span></dt>\r\n        <dd>{{ user.lastName }}</dd>\r\n\r\n        <dt><span>Email</span></dt>\r\n        <dd>{{ user.email }}</dd>\r\n\r\n        <dt><span>Created By</span></dt>\r\n        <dd>{{ user.createdBy }}</dd>\r\n\r\n        <dt><span>Created Date</span></dt>\r\n        <dd>{{ user.createdDate | date: 'dd/MM/yy HH:mm' }}</dd>\r\n\r\n        <dt><span>Last Modified By</span></dt>\r\n        <dd>{{ user.lastModifiedBy }}</dd>\r\n\r\n        <dt><span>Last Modified Date</span></dt>\r\n        <dd>{{ user.lastModifiedDate | date: 'dd/MM/yy HH:mm' }}</dd>\r\n\r\n        <dt><span>Profiles</span></dt>\r\n        <dd>\r\n          <ul class=\"list-unstyled\">\r\n            <li *ngFor=\"let authority of user.authorities\">\r\n              <span class=\"badge badge-info\">{{ authority }}</span>\r\n            </li>\r\n          </ul>\r\n        </dd>\r\n      </dl>\r\n\r\n      <button type=\"submit\" routerLink=\"../../\" class=\"btn btn-info\"><fa-icon icon=\"arrow-left\"></fa-icon>&nbsp;<span>Back</span></button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { User } from '../user-management.model';\r\n\r\n@Component({\r\n  selector: 'jhi-user-mgmt-detail',\r\n  templateUrl: './user-management-detail.component.html',\r\n})\r\nexport class UserManagementDetailComponent implements OnInit {\r\n  user: User | null = null;\r\n\r\n  constructor(private route: ActivatedRoute) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(({ user }) => {\r\n      this.user = user;\r\n    });\r\n  }\r\n}\r\n","<form *ngIf=\"user\" name=\"deleteForm\" (ngSubmit)=\"confirmDelete(user.login!)\">\r\n  <div class=\"modal-header\">\r\n    <h4 class=\"modal-title\">Confirm delete operation</h4>\r\n\r\n    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\" (click)=\"cancel()\">&times;</button>\r\n  </div>\r\n\r\n  <div class=\"modal-body\">\r\n    <jhi-alert-error></jhi-alert-error>\r\n\r\n    <p>Are you sure you want to delete this User?</p>\r\n  </div>\r\n\r\n  <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"cancel()\">\r\n      <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n    </button>\r\n\r\n    <button type=\"submit\" class=\"btn btn-danger\"><fa-icon icon=\"times\"></fa-icon>&nbsp;<span>Delete</span></button>\r\n  </div>\r\n</form>\r\n","import { Component } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { User } from '../user-management.model';\r\nimport { UserManagementService } from '../service/user-management.service';\r\n\r\n@Component({\r\n  selector: 'jhi-user-mgmt-delete-dialog',\r\n  templateUrl: './user-management-delete-dialog.component.html',\r\n})\r\nexport class UserManagementDeleteDialogComponent {\r\n  user?: User;\r\n\r\n  constructor(private userService: UserManagementService, public activeModal: NgbActiveModal) {}\r\n\r\n  cancel(): void {\r\n    this.activeModal.dismiss();\r\n  }\r\n\r\n  confirmDelete(login: string): void {\r\n    this.userService.delete(login).subscribe(() => {\r\n      this.activeModal.close('deleted');\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpResponse, HttpHeaders } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { combineLatest } from 'rxjs';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { ITEMS_PER_PAGE } from 'app/config/pagination.constants';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { Account } from 'app/core/auth/account.model';\r\nimport { UserManagementService } from '../service/user-management.service';\r\nimport { User } from '../user-management.model';\r\nimport { UserManagementDeleteDialogComponent } from '../delete/user-management-delete-dialog.component';\r\n\r\n@Component({\r\n  selector: 'jhi-user-mgmt',\r\n  templateUrl: './user-management.component.html',\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  currentAccount: Account | null = null;\r\n  users: User[] | null = null;\r\n  isLoading = false;\r\n  totalItems = 0;\r\n  itemsPerPage = ITEMS_PER_PAGE;\r\n  page!: number;\r\n  predicate!: string;\r\n  ascending!: boolean;\r\n\r\n  constructor(\r\n    private userService: UserManagementService,\r\n    private accountService: AccountService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.accountService.identity().subscribe(account => (this.currentAccount = account));\r\n    this.handleNavigation();\r\n  }\r\n\r\n  setActive(user: User, isActivated: boolean): void {\r\n    this.userService.update({ ...user, activated: isActivated }).subscribe(() => this.loadAll());\r\n  }\r\n\r\n  trackIdentity(index: number, item: User): number {\r\n    return item.id!;\r\n  }\r\n\r\n  deleteUser(user: User): void {\r\n    const modalRef = this.modalService.open(UserManagementDeleteDialogComponent, { size: 'lg', backdrop: 'static' });\r\n    modalRef.componentInstance.user = user;\r\n    // unsubscribe not needed because closed completes on modal close\r\n    modalRef.closed.subscribe(reason => {\r\n      if (reason === 'deleted') {\r\n        this.loadAll();\r\n      }\r\n    });\r\n  }\r\n\r\n  loadAll(): void {\r\n    this.isLoading = true;\r\n    this.userService\r\n      .query({\r\n        page: this.page - 1,\r\n        size: this.itemsPerPage,\r\n        sort: this.sort(),\r\n      })\r\n      .subscribe(\r\n        (res: HttpResponse<User[]>) => {\r\n          this.isLoading = false;\r\n          this.onSuccess(res.body, res.headers);\r\n        },\r\n        () => (this.isLoading = false)\r\n      );\r\n  }\r\n\r\n  transition(): void {\r\n    this.router.navigate(['./'], {\r\n      relativeTo: this.activatedRoute.parent,\r\n      queryParams: {\r\n        page: this.page,\r\n        sort: this.predicate + ',' + (this.ascending ? 'asc' : 'desc'),\r\n      },\r\n    });\r\n  }\r\n\r\n  private handleNavigation(): void {\r\n    combineLatest([this.activatedRoute.data, this.activatedRoute.queryParamMap]).subscribe(([data, params]) => {\r\n      const page = params.get('page');\r\n      this.page = page !== null ? +page : 1;\r\n      const sort = (params.get('sort') ?? data['defaultSort']).split(',');\r\n      this.predicate = sort[0];\r\n      this.ascending = sort[1] === 'asc';\r\n      this.loadAll();\r\n    });\r\n  }\r\n\r\n  private sort(): string[] {\r\n    const result = [this.predicate + ',' + (this.ascending ? 'asc' : 'desc')];\r\n    if (this.predicate !== 'id') {\r\n      result.push('id');\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private onSuccess(users: User[] | null, headers: HttpHeaders): void {\r\n    this.totalItems = Number(headers.get('X-Total-Count'));\r\n    this.users = users;\r\n  }\r\n}\r\n","<div>\r\n  <h2>\r\n    <span id=\"user-management-page-heading\" data-cy=\"userManagementPageHeading\">Users</span>\r\n\r\n    <div class=\"d-flex justify-content-end\">\r\n      <button class=\"btn btn-info mr-2\" (click)=\"loadAll()\" [disabled]=\"isLoading\">\r\n        <fa-icon icon=\"sync\" [spin]=\"isLoading\"></fa-icon>\r\n        <span>Refresh List</span>\r\n      </button>\r\n      <button class=\"btn btn-primary jh-create-entity\" [routerLink]=\"['./new']\">\r\n        <fa-icon icon=\"plus\"></fa-icon> <span>Create a new User</span>\r\n      </button>\r\n    </div>\r\n  </h2>\r\n\r\n  <jhi-alert-error></jhi-alert-error>\r\n\r\n  <jhi-alert></jhi-alert>\r\n\r\n  <div class=\"table-responsive\" *ngIf=\"users\">\r\n    <table class=\"table table-striped\" aria-describedby=\"user-management-page-heading\">\r\n      <thead>\r\n        <tr jhiSort [(predicate)]=\"predicate\" [(ascending)]=\"ascending\" [callback]=\"transition.bind(this)\">\r\n          <th scope=\"col\" jhiSortBy=\"id\"><span>ID</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\" jhiSortBy=\"login\"><span>Login</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\" jhiSortBy=\"email\"><span>Email</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"><span>Profiles</span></th>\r\n          <th scope=\"col\" jhiSortBy=\"createdDate\"><span>Created Date</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\" jhiSortBy=\"lastModifiedBy\"><span>Last Modified By</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\" jhiSortBy=\"lastModifiedDate\"><span>Last Modified Date</span> <fa-icon icon=\"sort\"></fa-icon></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody *ngIf=\"users\">\r\n        <tr *ngFor=\"let user of users; trackBy: trackIdentity\">\r\n          <td>\r\n            <a [routerLink]=\"['./', user.login, 'view']\">{{ user.id }}</a>\r\n          </td>\r\n          <td>{{ user.login }}</td>\r\n          <td>{{ user.email }}</td>\r\n          <td>\r\n            <button class=\"btn btn-danger btn-sm\" (click)=\"setActive(user, true)\" *ngIf=\"!user.activated\">Deactivated</button>\r\n            <button\r\n              class=\"btn btn-success btn-sm\"\r\n              (click)=\"setActive(user, false)\"\r\n              *ngIf=\"user.activated\"\r\n              [disabled]=\"!currentAccount || currentAccount.login === user.login\"\r\n            >\r\n              Activated\r\n            </button>\r\n          </td>\r\n          <td>\r\n            <div *ngFor=\"let authority of user.authorities\">\r\n              <span class=\"badge badge-info\">{{ authority }}</span>\r\n            </div>\r\n          </td>\r\n          <td>{{ user.createdDate | date: 'dd/MM/yy HH:mm' }}</td>\r\n          <td>{{ user.lastModifiedBy }}</td>\r\n          <td>{{ user.lastModifiedDate | date: 'dd/MM/yy HH:mm' }}</td>\r\n          <td class=\"text-right\">\r\n            <div class=\"btn-group\">\r\n              <button type=\"submit\" [routerLink]=\"['./', user.login, 'view']\" class=\"btn btn-info btn-sm\">\r\n                <fa-icon icon=\"eye\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">View</span>\r\n              </button>\r\n\r\n              <button type=\"submit\" [routerLink]=\"['./', user.login, 'edit']\" queryParamsHandling=\"merge\" class=\"btn btn-primary btn-sm\">\r\n                <fa-icon icon=\"pencil-alt\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Edit</span>\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                (click)=\"deleteUser(user)\"\r\n                class=\"btn btn-danger btn-sm\"\r\n                [disabled]=\"!currentAccount || currentAccount.login === user.login\"\r\n              >\r\n                <fa-icon icon=\"times\"></fa-icon>\r\n                <span class=\"d-none d-md-inline\">Delete</span>\r\n              </button>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div *ngIf=\"users\">\r\n    <div class=\"row justify-content-center\">\r\n      <jhi-item-count [params]=\"{ page: page, totalItems: totalItems, itemsPerPage: itemsPerPage }\"></jhi-item-count>\r\n    </div>\r\n\r\n    <div class=\"row justify-content-center\">\r\n      <ngb-pagination\r\n        [collectionSize]=\"totalItems\"\r\n        [(page)]=\"page\"\r\n        [pageSize]=\"itemsPerPage\"\r\n        [maxSize]=\"5\"\r\n        [rotate]=\"true\"\r\n        [boundaryLinks]=\"true\"\r\n        (pageChange)=\"transition()\"\r\n      ></ngb-pagination>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { User } from '../user-management.model';\r\nimport { UserManagementService } from '../service/user-management.service';\r\n\r\n@Component({\r\n  selector: 'jhi-user-mgmt-update',\r\n  templateUrl: './user-management-update.component.html',\r\n})\r\nexport class UserManagementUpdateComponent implements OnInit {\r\n  user!: User;\r\n  authorities: string[] = [];\r\n  isSaving = false;\r\n\r\n  editForm = this.fb.group({\r\n    id: [],\r\n    login: [\r\n      '',\r\n      [\r\n        Validators.required,\r\n        Validators.minLength(1),\r\n        Validators.maxLength(50),\r\n        Validators.pattern('^[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$'),\r\n      ],\r\n    ],\r\n    firstName: ['', [Validators.maxLength(50)]],\r\n    lastName: ['', [Validators.maxLength(50)]],\r\n    email: ['', [Validators.minLength(5), Validators.maxLength(254), Validators.email]],\r\n    activated: [],\r\n    langKey: [],\r\n    authorities: [],\r\n  });\r\n\r\n  constructor(private userService: UserManagementService, private route: ActivatedRoute, private fb: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.data.subscribe(({ user }) => {\r\n      if (user) {\r\n        this.user = user;\r\n        if (this.user.id === undefined) {\r\n          this.user.activated = true;\r\n        }\r\n        this.updateForm(user);\r\n      }\r\n    });\r\n    this.userService.authorities().subscribe(authorities => (this.authorities = authorities));\r\n  }\r\n\r\n  previousState(): void {\r\n    window.history.back();\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    this.updateUser(this.user);\r\n    if (this.user.id !== undefined) {\r\n      this.userService.update(this.user).subscribe(\r\n        () => this.onSaveSuccess(),\r\n        () => this.onSaveError()\r\n      );\r\n    } else {\r\n      this.user.langKey = 'en';\r\n      this.userService.create(this.user).subscribe(\r\n        () => this.onSaveSuccess(),\r\n        () => this.onSaveError()\r\n      );\r\n    }\r\n  }\r\n\r\n  private updateForm(user: User): void {\r\n    this.editForm.patchValue({\r\n      id: user.id,\r\n      login: user.login,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      email: user.email,\r\n      activated: user.activated,\r\n      langKey: user.langKey,\r\n      authorities: user.authorities,\r\n    });\r\n  }\r\n\r\n  private updateUser(user: User): void {\r\n    user.login = this.editForm.get(['login'])!.value;\r\n    user.firstName = this.editForm.get(['firstName'])!.value;\r\n    user.lastName = this.editForm.get(['lastName'])!.value;\r\n    user.email = this.editForm.get(['email'])!.value;\r\n    user.activated = this.editForm.get(['activated'])!.value;\r\n    user.langKey = this.editForm.get(['langKey'])!.value;\r\n    user.authorities = this.editForm.get(['authorities'])!.value;\r\n  }\r\n\r\n  private onSaveSuccess(): void {\r\n    this.isSaving = false;\r\n    this.previousState();\r\n  }\r\n\r\n  private onSaveError(): void {\r\n    this.isSaving = false;\r\n  }\r\n}\r\n","<div class=\"row justify-content-center\">\r\n  <div class=\"col-8\">\r\n    <form name=\"editForm\" role=\"form\" novalidate (ngSubmit)=\"save()\" [formGroup]=\"editForm\">\r\n      <h2 id=\"myUserLabel\">Create or edit a User</h2>\r\n\r\n      <div *ngIf=\"user\">\r\n        <jhi-alert-error></jhi-alert-error>\r\n\r\n        <div class=\"form-group\" [hidden]=\"!user.id\">\r\n          <label>ID</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"id\" formControlName=\"id\" readonly />\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-control-label\">Login</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"login\" formControlName=\"login\" />\r\n\r\n          <div *ngIf=\"editForm.get('login')!.invalid && (editForm.get('login')!.dirty || editForm.get('login')!.touched)\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('login')?.errors?.required\"> This field is required. </small>\r\n\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('login')?.errors?.maxlength\">\r\n              This field cannot be longer than 50 characters.\r\n            </small>\r\n\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('login')?.errors?.pattern\">\r\n              This field can only contain letters, digits and e-mail addresses.\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-control-label\">First Name</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"firstName\" formControlName=\"firstName\" />\r\n\r\n          <div *ngIf=\"editForm.get('firstName')!.invalid && (editForm.get('firstName')!.dirty || editForm.get('firstName')!.touched)\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('firstName')?.errors?.maxlength\">\r\n              This field cannot be longer than 50 characters.\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Last Name</label>\r\n          <input type=\"text\" class=\"form-control\" name=\"lastName\" formControlName=\"lastName\" />\r\n\r\n          <div *ngIf=\"editForm.get('lastName')!.invalid && (editForm.get('lastName')!.dirty || editForm.get('lastName')!.touched)\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('lastName')?.errors?.maxlength\">\r\n              This field cannot be longer than 50 characters.\r\n            </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label class=\"form-control-label\">Email</label>\r\n          <input type=\"email\" class=\"form-control\" name=\"email\" formControlName=\"email\" />\r\n\r\n          <div *ngIf=\"editForm.get('email')!.invalid && (editForm.get('email')!.dirty || editForm.get('email')!.touched)\">\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.required\"> This field is required. </small>\r\n\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.maxlength\">\r\n              This field cannot be longer than 100 characters.\r\n            </small>\r\n\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.minlength\">\r\n              This field is required to be at least 5 characters.\r\n            </small>\r\n\r\n            <small class=\"form-text text-danger\" *ngIf=\"editForm.get('email')?.errors?.email\"> Your email is invalid. </small>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-check\">\r\n          <label class=\"form-check-label\" for=\"activated\">\r\n            <input\r\n              class=\"form-check-input\"\r\n              [attr.disabled]=\"user.id === undefined ? 'disabled' : null\"\r\n              type=\"checkbox\"\r\n              id=\"activated\"\r\n              name=\"activated\"\r\n              formControlName=\"activated\"\r\n            />\r\n            <span>Activated</span>\r\n          </label>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label>Profiles</label>\r\n          <select class=\"form-control\" multiple name=\"authority\" formControlName=\"authorities\">\r\n            <option *ngFor=\"let authority of authorities\" [value]=\"authority\">{{ authority }}</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"user\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"previousState()\">\r\n          <fa-icon icon=\"ban\"></fa-icon>&nbsp;<span>Cancel</span>\r\n        </button>\r\n\r\n        <button type=\"submit\" [disabled]=\"editForm.invalid || isSaving\" class=\"btn btn-primary\">\r\n          <fa-icon icon=\"save\"></fa-icon>&nbsp;<span>Save</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","export interface IUser {\r\n  id?: number;\r\n  login?: string;\r\n  firstName?: string | null;\r\n  lastName?: string | null;\r\n  email?: string;\r\n  activated?: boolean;\r\n  langKey?: string;\r\n  authorities?: string[];\r\n  createdBy?: string;\r\n  createdDate?: Date;\r\n  lastModifiedBy?: string;\r\n  lastModifiedDate?: Date;\r\n}\r\n\r\nexport class User implements IUser {\r\n  constructor(\r\n    public id?: number,\r\n    public login?: string,\r\n    public firstName?: string | null,\r\n    public lastName?: string | null,\r\n    public email?: string,\r\n    public activated?: boolean,\r\n    public langKey?: string,\r\n    public authorities?: string[],\r\n    public createdBy?: string,\r\n    public createdDate?: Date,\r\n    public lastModifiedBy?: string,\r\n    public lastModifiedDate?: Date\r\n  ) {}\r\n}\r\n","import { HttpParams } from '@angular/common/http';\r\n\r\nexport const createRequestOption = (req?: any): HttpParams => {\r\n  let options: HttpParams = new HttpParams();\r\n\r\n  if (req) {\r\n    Object.keys(req).forEach(key => {\r\n      if (key !== 'sort') {\r\n        options = options.set(key, req[key]);\r\n      }\r\n    });\r\n\r\n    if (req.sort) {\r\n      req.sort.forEach((val: string) => {\r\n        options = options.append('sort', val);\r\n      });\r\n    }\r\n  }\r\n\r\n  return options;\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, Routes } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { User, IUser } from './user-management.model';\r\nimport { UserManagementService } from './service/user-management.service';\r\nimport { UserManagementComponent } from './list/user-management.component';\r\nimport { UserManagementDetailComponent } from './detail/user-management-detail.component';\r\nimport { UserManagementUpdateComponent } from './update/user-management-update.component';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserManagementResolve implements Resolve<IUser> {\r\n  constructor(private service: UserManagementService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<IUser> {\r\n    const id = route.params['login'];\r\n    if (id) {\r\n      return this.service.find(id);\r\n    }\r\n    return of(new User());\r\n  }\r\n}\r\n\r\nexport const userManagementRoute: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserManagementComponent,\r\n    data: {\r\n      defaultSort: 'id,asc',\r\n    },\r\n  },\r\n  {\r\n    path: ':login/view',\r\n    component: UserManagementDetailComponent,\r\n    resolve: {\r\n      user: UserManagementResolve,\r\n    },\r\n  },\r\n  {\r\n    path: 'new',\r\n    component: UserManagementUpdateComponent,\r\n    resolve: {\r\n      user: UserManagementResolve,\r\n    },\r\n  },\r\n  {\r\n    path: ':login/edit',\r\n    component: UserManagementUpdateComponent,\r\n    resolve: {\r\n      user: UserManagementResolve,\r\n    },\r\n  },\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { UserManagementComponent } from './list/user-management.component';\r\nimport { UserManagementDetailComponent } from './detail/user-management-detail.component';\r\nimport { UserManagementUpdateComponent } from './update/user-management-update.component';\r\nimport { UserManagementDeleteDialogComponent } from './delete/user-management-delete-dialog.component';\r\nimport { userManagementRoute } from './user-management.route';\r\n\r\n@NgModule({\r\n  imports: [SharedModule, RouterModule.forChild(userManagementRoute)],\r\n  declarations: [\r\n    UserManagementComponent,\r\n    UserManagementDetailComponent,\r\n    UserManagementUpdateComponent,\r\n    UserManagementDeleteDialogComponent,\r\n  ],\r\n  entryComponents: [UserManagementDeleteDialogComponent],\r\n})\r\nexport class UserManagementModule {}\r\n"],"sourceRoot":"webpack:///"}