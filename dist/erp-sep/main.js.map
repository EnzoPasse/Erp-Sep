{"version":3,"sources":["./src/main/webapp/app/shared/spinner.component.ts","./src/main/webapp/app/shared/alert/alert.component.html","./src/main/webapp/app/shared/alert/alert.component.ts","./src/main/webapp/app/shared/auth/has-any-authority.directive.ts","./src/main/webapp/app/core/auth/auth-jwt.service.ts","./src/main/webapp/app/core/util/alert.service.ts","./src/main/webapp/app/core/auth/user-route-access.service.ts","./src/main/webapp/app/config/dayjs.ts","./src/main/webapp/app/config/datepicker-adapter.ts","./src/main/webapp/app/shared/sort/sort.directive.ts","./src/main/webapp/app/shared/pagination/item-count.component.ts","./src/main/webapp/app/shared/alert/alert-error.component.html","./src/main/webapp/app/shared/alert/alert-error.component.ts","./src/main/webapp/app/core/config/application-config.service.ts","./src/main/webapp/app/shared/material.module.ts","./src/main/webapp/app/shared/menu-items/menu-items.ts","./src/main/webapp/app/core/auth/account.service.ts","./src/main/webapp/app/core/interceptor/error-handler.interceptor.ts","./src/main/webapp/app/shared/sort/sort-by.directive.ts","./src/main/webapp/main.ts","./src/main/webapp/app/shared/date/duration.pipe.ts","./src/main/webapp/app/config/font-awesome-icons.ts","./src/main/webapp/app/app-routing.module.ts","./src/main/webapp/app/shared/date/format-medium-date.pipe.ts","./src/main/webapp/app/login/login.service.ts","./src/main/webapp/app/shared/shared.module.ts","./src/main/webapp/app/core/auth/state-storage.service.ts","./src/main/webapp/app/core/interceptor/auth-expired.interceptor.ts","./src/main/webapp/app/core/util/event-manager.service.ts","./src/main/webapp/app/app.component.ts","./src/main/webapp/app/app.component.html","./src/main/webapp/app/core/interceptor/notification.interceptor.ts","./src/main/webapp/app/app.constants.ts","./src/main/webapp/app/app.module.ts","./src/main/webapp/app/shared/date/format-medium-datetime.pipe.ts","./src/main/webapp/app/shared/accordion/accordionanchor.directive.ts","./src/main/webapp/app/shared/shared-libs.module.ts","./src/main/webapp/app/shared/accordion/accordion.directive.ts","./src/main/webapp/app/core/interceptor/auth.interceptor.ts","./src/main/webapp/app/shared/accordion/accordionlink.directive.ts","./src/main/webapp/app/core/interceptor/index.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, Input, OnDestroy, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { Router, NavigationStart, NavigationEnd, NavigationCancel, NavigationError } from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'jhi-spinner',\r\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n    <div class=\"spinner\">\r\n      <div class=\"double-bounce1\"></div>\r\n      <div class=\"double-bounce2\"></div>\r\n    </div>\r\n  </div>`,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  public isSpinnerVisible = true;\r\n\r\n  @Input() public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n\r\n  constructor(private router: Router, @Inject(DOCUMENT) private document: Document) {\r\n    this.router.events.subscribe(\r\n      event => {\r\n        if (event instanceof NavigationStart) {\r\n          this.isSpinnerVisible = true;\r\n        } else if (event instanceof NavigationEnd || event instanceof NavigationCancel || event instanceof NavigationError) {\r\n          this.isSpinnerVisible = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isSpinnerVisible = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isSpinnerVisible = false;\r\n  }\r\n}\r\n","<div class=\"alerts\" role=\"alert\">\r\n  <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\r\n    <ngb-alert *ngIf=\"alert.message\" [type]=\"alert.type\" (closed)=\"close(alert)\">\r\n      <pre [innerHTML]=\"alert.message\"></pre>\r\n    </ngb-alert>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\nimport { AlertService, Alert } from 'app/core/util/alert.service';\r\n\r\n@Component({\r\n  selector: 'jhi-alert',\r\n  templateUrl: './alert.component.html',\r\n})\r\nexport class AlertComponent implements OnInit, OnDestroy {\r\n  alerts: Alert[] = [];\r\n\r\n  constructor(private alertService: AlertService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.alerts = this.alertService.get();\r\n  }\r\n\r\n  setClasses(alert: Alert): { [key: string]: boolean } {\r\n    const classes = { 'jhi-toast': Boolean(alert.toast) };\r\n    if (alert.position) {\r\n      return { ...classes, [alert.position]: true };\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.alertService.clear();\r\n  }\r\n\r\n  close(alert: Alert): void {\r\n    alert.close?.(this.alerts);\r\n  }\r\n}\r\n","import { Directive, Input, TemplateRef, ViewContainerRef, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nimport { AccountService } from 'app/core/auth/account.service';\r\n\r\n/**\r\n * @whatItDoes Conditionally includes an HTML element if current user has any\r\n * of the authorities passed as the `expression`.\r\n *\r\n * @howToUse\r\n * ```\r\n *     <some-element *jhiHasAnyAuthority=\"'ROLE_ADMIN'\">...</some-element>\r\n *\r\n *     <some-element *jhiHasAnyAuthority=\"['ROLE_ADMIN', 'ROLE_USER']\">...</some-element>\r\n * ```\r\n */\r\n@Directive({\r\n  selector: '[jhiHasAnyAuthority]',\r\n})\r\nexport class HasAnyAuthorityDirective implements OnDestroy {\r\n  private authorities!: string | string[];\r\n\r\n  private readonly destroy$ = new Subject<void>();\r\n\r\n  constructor(private accountService: AccountService, private templateRef: TemplateRef<any>, private viewContainerRef: ViewContainerRef) {}\r\n\r\n  @Input()\r\n  set jhiHasAnyAuthority(value: string | string[]) {\r\n    this.authorities = value;\r\n    this.updateView();\r\n    // Get notified each time authentication state changes.\r\n    this.accountService\r\n      .getAuthenticationState()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.updateView();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  private updateView(): void {\r\n    const hasAnyAuthority = this.accountService.hasAnyAuthority(this.authorities);\r\n    this.viewContainerRef.clear();\r\n    if (hasAnyAuthority) {\r\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\r\n\r\nimport { ApplicationConfigService } from '../config/application-config.service';\r\nimport { Login } from 'app/login/login.model';\r\n\r\ntype JwtToken = {\r\n  id_token: string;\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthServerProvider {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private $localStorage: LocalStorageService,\r\n    private $sessionStorage: SessionStorageService,\r\n    private applicationConfigService: ApplicationConfigService\r\n  ) {}\r\n\r\n  getToken(): string {\r\n    const tokenInLocalStorage: string | null = this.$localStorage.retrieve('authenticationToken');\r\n    const tokenInSessionStorage: string | null = this.$sessionStorage.retrieve('authenticationToken');\r\n    return tokenInLocalStorage ?? tokenInSessionStorage ?? '';\r\n  }\r\n\r\n  login(credentials: Login): Observable<void> {\r\n    return this.http\r\n      .post(this.applicationConfigService.getEndpointFor('login/authenticate'), credentials)\r\n      .pipe(map(response => this.authenticateSuccess(response, credentials.rememberMe)));\r\n  }\r\n\r\n  logout(): Observable<void> {\r\n    return new Observable(observer => {\r\n      this.$localStorage.clear('authenticationToken');\r\n      this.$sessionStorage.clear('authenticationToken');\r\n      observer.complete();\r\n    });\r\n  }\r\n\r\n  private authenticateSuccess(response: any, rememberMe: boolean): void {\r\n    // eslint-disable-next-line no-console\r\n    console.log(response);\r\n\r\n    const jwt = response.token;\r\n    if (rememberMe) {\r\n      this.$localStorage.store('authenticationToken', jwt);\r\n      this.$sessionStorage.clear('authenticationToken');\r\n    } else {\r\n      this.$sessionStorage.store('authenticationToken', jwt);\r\n      this.$localStorage.clear('authenticationToken');\r\n    }\r\n  }\r\n}\r\n","import { Injectable, SecurityContext, NgZone } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\nexport type AlertType = 'success' | 'danger' | 'warning' | 'info';\r\n\r\nexport interface Alert {\r\n  id?: number;\r\n  type: AlertType;\r\n  message?: string;\r\n  timeout?: number;\r\n  toast?: boolean;\r\n  position?: string;\r\n  close?: (alerts: Alert[]) => void;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AlertService {\r\n  timeout = 5000;\r\n  toast = false;\r\n  position = 'top right';\r\n\r\n  // unique id for each alert. Starts from 0.\r\n  private alertId = 0;\r\n  private alerts: Alert[] = [];\r\n\r\n  constructor(private sanitizer: DomSanitizer, private ngZone: NgZone) {}\r\n\r\n  clear(): void {\r\n    this.alerts = [];\r\n  }\r\n\r\n  get(): Alert[] {\r\n    return this.alerts;\r\n  }\r\n\r\n  /**\r\n   * Adds alert to alerts array and returns added alert.\r\n   * @param alert      Alert to add. If `timeout`, `toast` or `position` is missing then applying default value.\r\n   * @param extAlerts  If missing then adding `alert` to `AlertService` internal array and alerts can be retrieved by `get()`.\r\n   *                   Else adding `alert` to `extAlerts`.\r\n   * @returns  Added alert\r\n   */\r\n  addAlert(alert: Alert, extAlerts?: Alert[]): Alert {\r\n    alert.id = this.alertId++;\r\n\r\n    alert.message = this.sanitizer.sanitize(SecurityContext.HTML, alert.message ?? '') ?? '';\r\n    alert.timeout = alert.timeout ?? this.timeout;\r\n    alert.toast = alert.toast ?? this.toast;\r\n    alert.position = alert.position ?? this.position;\r\n    alert.close = (alertsArray: Alert[]) => this.closeAlert(alert.id!, alertsArray);\r\n\r\n    (extAlerts ?? this.alerts).push(alert);\r\n\r\n    if (alert.timeout > 0) {\r\n      // Workaround protractor waiting for setTimeout.\r\n      // Reference https://www.protractortest.org/#/timeouts\r\n      this.ngZone.runOutsideAngular(() => {\r\n        setTimeout(() => {\r\n          this.ngZone.run(() => {\r\n            this.closeAlert(alert.id!, extAlerts ?? this.alerts);\r\n          });\r\n        }, alert.timeout);\r\n      });\r\n    }\r\n\r\n    return alert;\r\n  }\r\n\r\n  private closeAlert(alertId: number, extAlerts?: Alert[]): void {\r\n    const alerts = extAlerts ?? this.alerts;\r\n    const alertIndex = alerts.map(alert => alert.id).indexOf(alertId);\r\n    // if found alert then remove\r\n    if (alertIndex >= 0) {\r\n      alerts.splice(alertIndex, 1);\r\n    }\r\n  }\r\n}\r\n","import { Injectable, isDevMode } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { StateStorageService } from './state-storage.service';\r\nimport { of } from 'rxjs';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserRouteAccessService implements CanActivate {\r\n  constructor(private router: Router, private accountService: AccountService, private stateStorageService: StateStorageService) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    /* return this.accountService.identity().pipe(\r\n      map(account => {\r\n        if (account) {\r\n          const authorities = route.data['authorities'];\r\n\r\n          if (!authorities || authorities.length === 0 || this.accountService.hasAnyAuthority(authorities)) {\r\n            return true;\r\n          }\r\n\r\n          if (isDevMode()) {\r\n            console.error('User has not any of required authorities: ', authorities);\r\n          }\r\n          this.router.navigate(['accessdenied']);\r\n          return false;\r\n        }\r\n\r\n        this.stateStorageService.storeUrl(state.url);\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      })\r\n    ); */\r\n\r\n    return of(true);\r\n  }\r\n}\r\n","import * as dayjs from 'dayjs';\r\nimport * as customParseFormat from 'dayjs/plugin/customParseFormat';\r\nimport * as duration from 'dayjs/plugin/duration';\r\nimport * as relativeTime from 'dayjs/plugin/relativeTime';\r\n\r\n// jhipster-needle-i18n-language-dayjs-imports - JHipster will import languages from dayjs here\r\n\r\n// DAYJS CONFIGURATION\r\ndayjs.extend(customParseFormat);\r\ndayjs.extend(duration);\r\ndayjs.extend(relativeTime);\r\n","/**\r\n * Angular bootstrap Date adapter\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { NgbDateAdapter, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as dayjs from 'dayjs';\r\n\r\n@Injectable()\r\nexport class NgbDateDayjsAdapter extends NgbDateAdapter<dayjs.Dayjs> {\r\n  fromModel(date: dayjs.Dayjs | null): NgbDateStruct | null {\r\n    if (date && dayjs.isDayjs(date) && date.isValid()) {\r\n      return { year: date.year(), month: date.month() + 1, day: date.date() };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  toModel(date: NgbDateStruct | null): dayjs.Dayjs | null {\r\n    return date ? dayjs(`${date.year}-${date.month}-${date.day}`) : null;\r\n  }\r\n}\r\n","import { Directive, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[jhiSort]',\r\n})\r\nexport class SortDirective<T> {\r\n  @Input()\r\n  get predicate(): T | undefined {\r\n    return this._predicate;\r\n  }\r\n  set predicate(predicate: T | undefined) {\r\n    this._predicate = predicate;\r\n    this.predicateChange.emit(predicate);\r\n  }\r\n\r\n  @Input()\r\n  get ascending(): boolean | undefined {\r\n    return this._ascending;\r\n  }\r\n  set ascending(ascending: boolean | undefined) {\r\n    this._ascending = ascending;\r\n    this.ascendingChange.emit(ascending);\r\n  }\r\n\r\n  @Input() callback?: () => void;\r\n\r\n  @Output() predicateChange = new EventEmitter<T>();\r\n  @Output() ascendingChange = new EventEmitter<boolean>();\r\n\r\n  private _predicate?: T;\r\n  private _ascending?: boolean;\r\n\r\n  sort(field?: T): void {\r\n    if (String(this.predicate) !== '_score') {\r\n      this.ascending = field !== this.predicate ? true : !this.ascending;\r\n      this.predicate = field;\r\n      this.predicateChange.emit(field);\r\n      this.ascendingChange.emit(this.ascending);\r\n      this.callback?.();\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n/**\r\n * A component that will take care of item count statistics of a pagination.\r\n */\r\n@Component({\r\n  selector: 'jhi-item-count',\r\n  template: ` <div>Showing {{ first }} - {{ second }} of {{ total }} items.</div> `,\r\n})\r\nexport class ItemCountComponent {\r\n  /**\r\n   * @param params  Contains parameters for component:\r\n   *                    page          Current page number\r\n   *                    totalItems    Total number of items\r\n   *                    itemsPerPage  Number of items per page\r\n   */\r\n  @Input() set params(params: { page?: number; totalItems?: number; itemsPerPage?: number }) {\r\n    if (params.page !== undefined && params.totalItems !== undefined && params.itemsPerPage !== undefined) {\r\n      this.first = (params.page - 1) * params.itemsPerPage === 0 ? 1 : (params.page - 1) * params.itemsPerPage + 1;\r\n      this.second = params.page * params.itemsPerPage < params.totalItems ? params.page * params.itemsPerPage : params.totalItems;\r\n    } else {\r\n      this.first = undefined;\r\n      this.second = undefined;\r\n    }\r\n    this.total = params.totalItems;\r\n  }\r\n\r\n  first?: number;\r\n  second?: number;\r\n  total?: number;\r\n}\r\n","<div class=\"alerts\" role=\"alert\">\r\n  <div *ngFor=\"let alert of alerts\" [ngClass]=\"setClasses(alert)\">\r\n    <ngb-alert *ngIf=\"alert.message\" [type]=\"alert.type\" (closed)=\"close(alert)\">\r\n      <pre [innerHTML]=\"alert.message\"></pre>\r\n    </ngb-alert>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AlertError } from './alert-error.model';\r\nimport { Alert, AlertService } from 'app/core/util/alert.service';\r\nimport { EventManager, EventWithContent } from 'app/core/util/event-manager.service';\r\n\r\n@Component({\r\n  selector: 'jhi-alert-error',\r\n  templateUrl: './alert-error.component.html',\r\n})\r\nexport class AlertErrorComponent implements OnDestroy {\r\n  alerts: Alert[] = [];\r\n  errorListener: Subscription;\r\n  httpErrorListener: Subscription;\r\n\r\n  constructor(private alertService: AlertService, private eventManager: EventManager) {\r\n    this.errorListener = eventManager.subscribe('erpSepApp.error', (response: EventWithContent<unknown> | string) => {\r\n      const errorResponse = (response as EventWithContent<AlertError>).content;\r\n      this.addErrorAlert(errorResponse.message);\r\n    });\r\n\r\n    this.httpErrorListener = eventManager.subscribe('erpSepApp.httpError', (response: EventWithContent<unknown> | string) => {\r\n      const httpErrorResponse = (response as EventWithContent<HttpErrorResponse>).content;\r\n      switch (httpErrorResponse.status) {\r\n        // connection refused, server not reachable\r\n        case 0:\r\n          this.addErrorAlert('Server not reachable');\r\n          break;\r\n\r\n        case 400: {\r\n          const arr = httpErrorResponse.headers.keys();\r\n          let errorHeader: string | null = null;\r\n          for (const entry of arr) {\r\n            if (entry.toLowerCase().endsWith('app-error')) {\r\n              errorHeader = httpErrorResponse.headers.get(entry);\r\n            }\r\n          }\r\n          if (errorHeader) {\r\n            this.addErrorAlert(errorHeader);\r\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.fieldErrors) {\r\n            const fieldErrors = httpErrorResponse.error.fieldErrors;\r\n            for (const fieldError of fieldErrors) {\r\n              if (['Min', 'Max', 'DecimalMin', 'DecimalMax'].includes(fieldError.message)) {\r\n                fieldError.message = 'Size';\r\n              }\r\n              // convert 'something[14].other[4].id' to 'something[].other[].id' so translations can be written to it\r\n              const convertedField: string = fieldError.field.replace(/\\[\\d*\\]/g, '[]');\r\n              const fieldName: string = convertedField.charAt(0).toUpperCase() + convertedField.slice(1);\r\n              this.addErrorAlert(`Error on field \"${fieldName}\"`);\r\n            }\r\n          } else if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\r\n            this.addErrorAlert(httpErrorResponse.error.detail ?? httpErrorResponse.error.message);\r\n          } else {\r\n            this.addErrorAlert(httpErrorResponse.error);\r\n          }\r\n          break;\r\n        }\r\n\r\n        case 404:\r\n          this.addErrorAlert('Not found');\r\n          break;\r\n\r\n        default:\r\n          if (httpErrorResponse.error !== '' && httpErrorResponse.error.message) {\r\n            this.addErrorAlert(httpErrorResponse.error.detail ?? httpErrorResponse.error.message);\r\n          } else {\r\n            this.addErrorAlert(httpErrorResponse.error);\r\n          }\r\n      }\r\n    });\r\n  }\r\n\r\n  setClasses(alert: Alert): { [key: string]: boolean } {\r\n    const classes = { 'jhi-toast': Boolean(alert.toast) };\r\n    if (alert.position) {\r\n      return { ...classes, [alert.position]: true };\r\n    }\r\n    return classes;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.eventManager.destroy(this.errorListener);\r\n    this.eventManager.destroy(this.httpErrorListener);\r\n  }\r\n\r\n  close(alert: Alert): void {\r\n    alert.close?.(this.alerts);\r\n  }\r\n\r\n  private addErrorAlert(message?: string): void {\r\n    this.alertService.addAlert({ type: 'danger', message }, this.alerts);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationConfigService {\r\n  private endpointPrefix = '';\r\n\r\n  setEndpointPrefix(endpointPrefix: string): void {\r\n    this.endpointPrefix = endpointPrefix;\r\n  }\r\n\r\n  getEndpointFor(api: string, microservice?: string): string {\r\n    if (microservice) {\r\n      return `${this.endpointPrefix}services/${microservice}/${api}`;\r\n    }\r\n    return `${this.endpointPrefix}${api}`;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { CdkAccordionModule } from '@angular/cdk/accordion';\r\nimport { BidiModule } from '@angular/cdk/bidi';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\n\r\nimport { ShowOnDirtyErrorStateMatcher, ErrorStateMatcher } from '@angular/material/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    CdkAccordionModule,\r\n    BidiModule,\r\n    PlatformModule,\r\n    ObserversModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule,\r\n  ],\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    CdkAccordionModule,\r\n    BidiModule,\r\n    PlatformModule,\r\n    ObserversModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n    MatFormFieldModule,\r\n  ],\r\n\r\n  providers: [{ provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher }],\r\n})\r\nexport class MaterialModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface BadgeItem {\r\n  type: string;\r\n  value: string;\r\n}\r\nexport interface Saperator {\r\n  name: string;\r\n  type?: string;\r\n}\r\nexport interface SubChildren {\r\n  state: string;\r\n  name: string;\r\n  type?: string;\r\n}\r\nexport interface ChildrenItems {\r\n  state: string;\r\n  name: string;\r\n  type?: string;\r\n  child?: SubChildren[];\r\n}\r\n\r\nexport interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n  badge?: BadgeItem[];\r\n  saperator?: Saperator[];\r\n  children?: ChildrenItems[];\r\n}\r\n\r\nconst MENUITEMS = [\r\n  /*   {\r\n      state: '',\r\n      name: 'Mantenimiento',\r\n      type: 'saperator',\r\n      icon: '',\r\n    }, */\r\n  {\r\n    state: 'master',\r\n    name: 'Maestro',\r\n    type: 'sub',\r\n    icon: 'settings',\r\n    permission: '',\r\n    children: [\r\n      { state: '', name: 'Entes', type: 'link', permission: '' },\r\n      { state: '', name: 'Conceptos', type: 'link', permission: '' },\r\n      { state: '', name: 'Tipos Comprobantes', type: 'link', permission: '' },\r\n      { state: '', name: 'Conceptos Bancarios', type: 'link', permission: '' },\r\n    ],\r\n  },\r\n  {\r\n    state: 'seguridad',\r\n    name: 'Seguridad',\r\n    type: 'sub',\r\n    icon: 'security',\r\n    permission: 'ModuloSeguridad',\r\n    children: [\r\n      { state: 'usuarios', name: 'Usuarios', type: 'link', permission: 'FormularioUsuarios' },\r\n      { state: 'roles', name: 'Roles', type: 'link', permission: 'FormularioRoles' },\r\n    ],\r\n  },\r\n  {\r\n    state: 'deuda',\r\n    name: 'Deudas',\r\n    type: 'sub',\r\n    icon: 'assignment',\r\n    permission: 'ModuloDeudas',\r\n    // badge: [{ type: 'warning', value: 'new' }],\r\n    children: [\r\n      { state: 'comprobantesDeuda', name: 'Deuda', type: 'link', permission: 'FormularioComprobantesporDeuda' },\r\n      { state: 'lotesDeuda', name: 'Lote de Deuda', type: 'link', permission: 'FormularioComprobantesporImportaciondeDeuda' },\r\n      { state: 'notaCredito', name: 'Nota Credito', type: 'link', permission: 'FormularioComprobantesporNotasdeCreditos' },\r\n      { state: 'notaDebito', name: 'Nota Debito', type: 'link', permission: 'FormularioComprobantesporNotasdeDebitos' },\r\n      { state: 'ajusteSaldo', name: 'Ajuste Saldo', type: 'link', permission: 'FormularioAjustesdeSaldo' },\r\n    ],\r\n  },\r\n  {\r\n    state: 'pago',\r\n    name: 'Pagos',\r\n    type: 'sub',\r\n    icon: 'monetization_on',\r\n    permission: 'ModuloPagos',\r\n    // badge: [{ type: 'red', value: '17' }],\r\n    children: [{ state: 'oredenesPago', name: 'Ordenes de Pago', type: 'link', permission: 'FormularioOrdenesdePago' }],\r\n  },\r\n  {\r\n    state: 'administracion',\r\n    name: 'Administracion',\r\n    type: 'sub',\r\n    icon: 'format_shapes',\r\n    permission: 'ModuloAdministracion',\r\n    children: [\r\n      { state: 'anticipos', name: 'Anticipos', type: 'link', permission: '' },\r\n      { state: 'transferencias', name: 'Transferencias', type: 'link', permission: 'FormularioTransferencias' },\r\n      { state: 'depositos', name: 'Depositos', type: 'link', permission: 'FormularioDepositos' },\r\n      { state: 'cierresCaja', name: 'Cierres de Caja', type: 'link', permission: 'FormularioCierresdeCaja' },\r\n      { state: 'ingresos-egresos', name: 'Ingresos / Egresos', type: 'link', permission: '' },\r\n    ],\r\n  },\r\n\r\n  {\r\n    state: 'authentication',\r\n    name: 'Authentication',\r\n    type: 'sub',\r\n    icon: 'perm_contact_calendar',\r\n    children: [\r\n      { state: 'login', name: 'Login', type: 'link' },\r\n      { state: 'register', name: 'Register', type: 'link' },\r\n      { state: 'forgot', name: 'Forgot', type: 'link' },\r\n      { state: 'lockscreen', name: 'Lockscreen', type: 'link' },\r\n      { state: '404', name: 'Error', type: 'link' },\r\n    ],\r\n  },\r\n\r\n  /*  MULTINIVEL  \r\n  {\r\n    state: 'pages',\r\n    name: 'Pages',\r\n    type: 'sub',\r\n    icon: 'content_copy',\r\n    children: [\r\n      { state: 'timeline', name: 'Timeline', type: 'link' },\r\n      { state: 'invoice', name: 'Invoice', type: 'link' },\r\n      { state: 'pricing', name: 'Pricing', type: 'link' },\r\n      { state: 'helper', name: 'Helper Classes', type: 'link' },\r\n      {\r\n        state: 'icons',\r\n        name: 'Icons',\r\n        type: 'subchild',\r\n        subchildren: [\r\n          {\r\n            state: 'material',\r\n            name: 'Material Icons',\r\n            type: 'link',\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  }, */\r\n];\r\n\r\n@Injectable()\r\nexport class MenuItems {\r\n  getMenuitem(): Menu[] {\r\n    return MENUITEMS;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, ReplaySubject, of } from 'rxjs';\r\nimport { shareReplay, tap, catchError } from 'rxjs/operators';\r\n\r\nimport { StateStorageService } from 'app/core/auth/state-storage.service';\r\nimport { ApplicationConfigService } from '../config/application-config.service';\r\nimport { Account } from 'app/core/auth/account.model';\r\nimport { AccountPeriod } from './accountingPeriod.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AccountService {\r\n  private userIdentity: Account | null = null;\r\n  private authenticationState = new ReplaySubject<Account | null>(1);\r\n  private accountCache$?: Observable<Account | null>;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private stateStorageService: StateStorageService,\r\n    private router: Router,\r\n    private applicationConfigService: ApplicationConfigService\r\n  ) {}\r\n\r\n  save(account: Account): Observable<{}> {\r\n    return this.http.post(this.applicationConfigService.getEndpointFor('api/account'), account);\r\n  }\r\n\r\n  authenticate(identity: Account | null): void {\r\n    this.userIdentity = identity;\r\n    this.authenticationState.next(this.userIdentity);\r\n  }\r\n\r\n  hasAnyAuthority(authorities: string[] | string): boolean {\r\n    if (!this.userIdentity) {\r\n      return false;\r\n    }\r\n    if (!Array.isArray(authorities)) {\r\n      authorities = [authorities];\r\n    }\r\n    return this.userIdentity.authorities.some((authority: string) => authorities.includes(authority));\r\n  }\r\n\r\n  identity(force?: boolean): Observable<Account | null> {\r\n    if (!this.accountCache$ || force || !this.isAuthenticated()) {\r\n      this.accountCache$ = this.fetch().pipe(\r\n        catchError(() => of(null)),\r\n        tap((account: Account | null) => {\r\n          this.authenticate(account);\r\n\r\n          if (account) {\r\n            this.navigateToStoredUrl();\r\n          }\r\n        }),\r\n        shareReplay()\r\n      );\r\n    }\r\n    return this.accountCache$;\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return this.userIdentity !== null;\r\n  }\r\n\r\n  getAuthenticationState(): Observable<Account | null> {\r\n    return this.authenticationState.asObservable();\r\n  }\r\n\r\n  getImageUrl(): string {\r\n    return this.userIdentity?.imageUrl ?? '';\r\n  }\r\n\r\n  getAllPeriod(): Observable<AccountPeriod[]> {\r\n    return this.http.get<AccountPeriod[]>(this.applicationConfigService.getEndpointFor('login/getperiodoContable'));\r\n  }\r\n\r\n  private fetch(): Observable<Account> {\r\n    return this.http.get<Account>(this.applicationConfigService.getEndpointFor('api/account'));\r\n  }\r\n\r\n  private navigateToStoredUrl(): void {\r\n    // previousState can be set in the authExpiredInterceptor and in the userRouteAccessService\r\n    // if login is successful, go to stored previousState and clear previousState\r\n    const previousUrl = this.stateStorageService.getUrl();\r\n    if (previousUrl) {\r\n      this.stateStorageService.clearUrl();\r\n      this.router.navigateByUrl(previousUrl);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpErrorResponse, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { EventManager, EventWithContent } from 'app/core/util/event-manager.service';\r\n\r\n@Injectable()\r\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\r\n  constructor(private eventManager: EventManager) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      tap({\r\n        error: (err: HttpErrorResponse) => {\r\n          if (!(err.status === 401 && (err.message === '' || err.url?.includes('api/account')))) {\r\n            this.eventManager.broadcast(new EventWithContent('erpSepApp.httpError', err));\r\n          }\r\n        },\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { AfterContentInit, ContentChild, Directive, Host, HostListener, Input, OnDestroy } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { FaIconComponent } from '@fortawesome/angular-fontawesome';\r\nimport { faSort, faSortDown, faSortUp, IconDefinition } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { SortDirective } from './sort.directive';\r\n\r\n@Directive({\r\n  selector: '[jhiSortBy]',\r\n})\r\nexport class SortByDirective<T> implements AfterContentInit, OnDestroy {\r\n  @Input() jhiSortBy?: T;\r\n\r\n  @ContentChild(FaIconComponent, { static: true })\r\n  iconComponent?: FaIconComponent;\r\n\r\n  sortIcon = faSort;\r\n  sortAscIcon = faSortUp;\r\n  sortDescIcon = faSortDown;\r\n\r\n  private readonly destroy$ = new Subject<void>();\r\n\r\n  constructor(@Host() private sort: SortDirective<T>) {\r\n    sort.predicateChange.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateIconDefinition());\r\n    sort.ascendingChange.pipe(takeUntil(this.destroy$)).subscribe(() => this.updateIconDefinition());\r\n  }\r\n\r\n  @HostListener('click')\r\n  onClick(): void {\r\n    this.sort.sort(this.jhiSortBy);\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.updateIconDefinition();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  private updateIconDefinition(): void {\r\n    if (this.iconComponent) {\r\n      let icon: IconDefinition = this.sortIcon;\r\n      if (this.sort.predicate === this.jhiSortBy) {\r\n        icon = this.sort.ascending ? this.sortAscIcon : this.sortDescIcon;\r\n      }\r\n      this.iconComponent.icon = icon.iconName;\r\n      this.iconComponent.render();\r\n    }\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { DEBUG_INFO_ENABLED } from './app/app.constants';\r\nimport { AppModule } from './app/app.module';\r\n\r\n// disable debug data on prod profile to improve performance\r\nif (!DEBUG_INFO_ENABLED) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule, { preserveWhitespaces: true })\r\n  // eslint-disable-next-line no-console\r\n  .then(() => console.log('Application started'))\r\n  .catch(err => console.error(err));\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\n@Pipe({\r\n  name: 'duration',\r\n})\r\nexport class DurationPipe implements PipeTransform {\r\n  transform(value: any): string {\r\n    if (value) {\r\n      return dayjs.duration(value).humanize();\r\n    }\r\n    return '';\r\n  }\r\n}\r\n","import {\r\n  faArrowLeft,\r\n  faAsterisk,\r\n  faBan,\r\n  faBars,\r\n  faBell,\r\n  faBook,\r\n  faCalendarAlt,\r\n  faCheck,\r\n  faCloud,\r\n  faCogs,\r\n  faDatabase,\r\n  faEye,\r\n  faFlag,\r\n  faHeart,\r\n  faHome,\r\n  faList,\r\n  faLock,\r\n  faPencilAlt,\r\n  faPlus,\r\n  faRoad,\r\n  faSave,\r\n  faSearch,\r\n  faSignOutAlt,\r\n  faSignInAlt,\r\n  faSort,\r\n  faSortDown,\r\n  faSortUp,\r\n  faSync,\r\n  faTachometerAlt,\r\n  faTasks,\r\n  faThList,\r\n  faTimes,\r\n  faTrashAlt,\r\n  faUser,\r\n  faUserPlus,\r\n  faUsers,\r\n  faUsersCog,\r\n  faWrench,\r\n  // jhipster-needle-add-icon-import\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport const fontAwesomeIcons = [\r\n  faArrowLeft,\r\n  faAsterisk,\r\n  faBan,\r\n  faBars,\r\n  faBell,\r\n  faBook,\r\n  faCalendarAlt,\r\n  faCheck,\r\n  faCloud,\r\n  faCogs,\r\n  faDatabase,\r\n  faEye,\r\n  faFlag,\r\n  faHeart,\r\n  faHome,\r\n  faList,\r\n  faLock,\r\n  faPencilAlt,\r\n  faPlus,\r\n  faRoad,\r\n  faSave,\r\n  faSearch,\r\n  faSignOutAlt,\r\n  faSignInAlt,\r\n  faSort,\r\n  faSortDown,\r\n  faSortUp,\r\n  faSync,\r\n  faTachometerAlt,\r\n  faTasks,\r\n  faThList,\r\n  faTimes,\r\n  faTrashAlt,\r\n  faUser,\r\n  faUserPlus,\r\n  faUsers,\r\n  faUsersCog,\r\n  faWrench,\r\n  // jhipster-needle-add-icon-import\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n// import { errorRoute } from './layouts/error/error.route';\r\n// import { navbarRoute } from './layouts/navbar/navbar.route';\r\nimport { DEBUG_INFO_ENABLED } from 'app/app.constants';\r\nimport { UserRouteAccessService } from './core/auth/user-route-access.service';\r\n// import { Authority } from 'app/config/authority.constants';\r\n\r\n// import { UserRouteAccessService } from 'app/core/auth/user-route-access.service';\r\n// import { MainComponent } from './layouts/main/main.component';\r\n\r\n/* const LAYOUT_ROUTES = [navbarRoute, ...errorRoute];\r\n\r\n @NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(\r\n      [\r\n        {\r\n          path: 'admin',\r\n          data: {\r\n            authorities: [Authority.ADMIN],\r\n          },\r\n          canActivate: [UserRouteAccessService],\r\n          loadChildren: () => import('./admin/admin-routing.module').then(m => m.AdminRoutingModule),\r\n        },\r\n        {\r\n          path: 'account',\r\n          loadChildren: () => import('./account/account.module').then(m => m.AccountModule),\r\n        },\r\n        {\r\n          path: 'login',\r\n          loadChildren: () => import('./login/login.module').then(m => m.LoginModule),\r\n        },\r\n        ...LAYOUT_ROUTES,\r\n      ],\r\n      { enableTracing: DEBUG_INFO_ENABLED }\r\n    ),\r\n  ],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {} */\r\n\r\nconst ROUTES = [\r\n  {\r\n    path: 'login',\r\n    loadChildren: () => import('./login/login.module').then(m => m.LoginModule),\r\n  },\r\n\r\n  {\r\n    path: '',\r\n    canActivate: [UserRouteAccessService],\r\n    loadChildren: () => import('./layouts/layout.module').then(m => m.LayoutModule),\r\n  },\r\n\r\n  { path: '**', redirectTo: 'accessdenied', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(ROUTES, { enableTracing: DEBUG_INFO_ENABLED, relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\n@Pipe({\r\n  name: 'formatMediumDate',\r\n})\r\nexport class FormatMediumDatePipe implements PipeTransform {\r\n  transform(day: dayjs.Dayjs | null | undefined): string {\r\n    return day ? day.format('D MMM YYYY') : '';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\n\r\nimport { Account } from 'app/core/auth/account.model';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\nimport { AuthServerProvider } from 'app/core/auth/auth-jwt.service';\r\nimport { Login } from './login.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LoginService {\r\n  constructor(private accountService: AccountService, private authServerProvider: AuthServerProvider) {}\r\n\r\n  login(credentials: Login): Observable<Account | null> {\r\n    // eslint-disable-next-line no-console\r\n    console.log(credentials);\r\n\r\n    return this.authServerProvider.login(credentials).pipe(mergeMap(() => this.accountService.identity(true)));\r\n  }\r\n\r\n  logout(): void {\r\n    this.authServerProvider.logout().subscribe({ complete: () => this.accountService.authenticate(null) });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { SharedLibsModule } from './shared-libs.module';\r\nimport { AlertComponent } from './alert/alert.component';\r\nimport { AlertErrorComponent } from './alert/alert-error.component';\r\nimport { HasAnyAuthorityDirective } from './auth/has-any-authority.directive';\r\nimport { DurationPipe } from './date/duration.pipe';\r\nimport { FormatMediumDatetimePipe } from './date/format-medium-datetime.pipe';\r\nimport { FormatMediumDatePipe } from './date/format-medium-date.pipe';\r\nimport { SortByDirective } from './sort/sort-by.directive';\r\nimport { SortDirective } from './sort/sort.directive';\r\nimport { ItemCountComponent } from './pagination/item-count.component';\r\n\r\nimport { MaterialModule } from './material.module';\r\nimport { MenuItems } from './menu-items/menu-items';\r\nimport { AccordionDirective } from './accordion/accordion.directive';\r\nimport { AccordionAnchorDirective } from './accordion/accordionanchor.directive';\r\nimport { AccordionLinkDirective } from './accordion/accordionlink.directive';\r\nimport { SpinnerComponent } from './spinner.component';\r\n\r\n@NgModule({\r\n  imports: [SharedLibsModule, MaterialModule],\r\n  declarations: [\r\n    AlertComponent,\r\n    AlertErrorComponent,\r\n    HasAnyAuthorityDirective,\r\n    DurationPipe,\r\n    FormatMediumDatetimePipe,\r\n    FormatMediumDatePipe,\r\n    SortByDirective,\r\n    SortDirective,\r\n    ItemCountComponent,\r\n\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective,\r\n    SpinnerComponent,\r\n  ],\r\n  exports: [\r\n    SharedLibsModule,\r\n    MaterialModule,\r\n    AlertComponent,\r\n    AlertErrorComponent,\r\n    HasAnyAuthorityDirective,\r\n    DurationPipe,\r\n    FormatMediumDatetimePipe,\r\n    FormatMediumDatePipe,\r\n    SortByDirective,\r\n    SortDirective,\r\n    ItemCountComponent,\r\n\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective,\r\n    SpinnerComponent,\r\n  ],\r\n  providers: [MenuItems],\r\n})\r\nexport class SharedModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { SessionStorageService } from 'ngx-webstorage';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class StateStorageService {\r\n  private previousUrlKey = 'previousUrl';\r\n\r\n  constructor(private $sessionStorage: SessionStorageService) {}\r\n\r\n  storeUrl(url: string): void {\r\n    this.$sessionStorage.store(this.previousUrlKey, url);\r\n  }\r\n\r\n  getUrl(): string | null {\r\n    return this.$sessionStorage.retrieve(this.previousUrlKey) as string | null;\r\n  }\r\n\r\n  clearUrl(): void {\r\n    this.$sessionStorage.clear(this.previousUrlKey);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { LoginService } from 'app/login/login.service';\r\nimport { StateStorageService } from 'app/core/auth/state-storage.service';\r\nimport { AccountService } from 'app/core/auth/account.service';\r\n\r\n@Injectable()\r\nexport class AuthExpiredInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private stateStorageService: StateStorageService,\r\n    private router: Router,\r\n    private accountService: AccountService\r\n  ) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      tap({\r\n        error: (err: HttpErrorResponse) => {\r\n          if (err.status === 401 && err.url && !err.url.includes('api/account') && this.accountService.isAuthenticated()) {\r\n            this.stateStorageService.storeUrl(this.router.routerState.snapshot.url);\r\n            this.loginService.logout();\r\n            this.router.navigate(['/login']);\r\n          }\r\n        },\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Observer, Subscription } from 'rxjs';\r\nimport { filter, share } from 'rxjs/operators';\r\n\r\nexport class EventWithContent<T> {\r\n  constructor(public name: string, public content: T) {}\r\n}\r\n\r\n/**\r\n * An utility class to manage RX events\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class EventManager {\r\n  observable: Observable<EventWithContent<unknown> | string>;\r\n  observer?: Observer<EventWithContent<unknown> | string>;\r\n\r\n  constructor() {\r\n    this.observable = new Observable((observer: Observer<EventWithContent<unknown> | string>) => {\r\n      this.observer = observer;\r\n    }).pipe(share());\r\n  }\r\n\r\n  /**\r\n   * Method to broadcast the event to observer\r\n   */\r\n  broadcast(event: EventWithContent<unknown> | string): void {\r\n    if (this.observer) {\r\n      this.observer.next(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to subscribe to an event with callback\r\n   * @param eventNames  Single event name or array of event names to what subscribe\r\n   * @param callback    Callback to run when the event occurs\r\n   */\r\n  subscribe(eventNames: string | string[], callback: (event: EventWithContent<unknown> | string) => void): Subscription {\r\n    if (typeof eventNames === 'string') {\r\n      eventNames = [eventNames];\r\n    }\r\n    return this.observable\r\n      .pipe(\r\n        filter((event: EventWithContent<unknown> | string) => {\r\n          for (const eventName of eventNames) {\r\n            if ((typeof event === 'string' && event === eventName) || (typeof event !== 'string' && event.name === eventName)) {\r\n              return true;\r\n            }\r\n          }\r\n          return false;\r\n        })\r\n      )\r\n      .subscribe(callback);\r\n  }\r\n\r\n  /**\r\n   * Method to unsubscribe the subscription\r\n   */\r\n  destroy(subscriber: Subscription): void {\r\n    subscriber.unsubscribe();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'jhi-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent {}\r\n","<!-- ============================================================== -->\r\n<!-- Main wrapper - style you can find in pages.scss -->\r\n<!-- ============================================================== -->\r\n<router-outlet>\r\n  <jhi-spinner></jhi-spinner>\r\n</router-outlet>\r\n","import { HttpInterceptor, HttpRequest, HttpResponse, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { AlertService } from 'app/core/util/alert.service';\r\n\r\n@Injectable()\r\nexport class NotificationInterceptor implements HttpInterceptor {\r\n  constructor(private alertService: AlertService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request).pipe(\r\n      tap((event: HttpEvent<any>) => {\r\n        if (event instanceof HttpResponse) {\r\n          let alert: string | null = null;\r\n\r\n          for (const headerKey of event.headers.keys()) {\r\n            if (headerKey.toLowerCase().endsWith('app-alert')) {\r\n              alert = event.headers.get(headerKey);\r\n            }\r\n          }\r\n\r\n          if (alert) {\r\n            this.alertService.addAlert({\r\n              type: 'success',\r\n              message: alert,\r\n            });\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","// These constants are injected via webpack environment variables.\r\n// You can add more variables in webpack.common.js or in profile specific webpack.<dev|prod>.js files.\r\n// If you change the values in the webpack config files, you need to re run webpack to update the application\r\n\r\nexport const VERSION = process.env.VERSION;\r\nexport const DEBUG_INFO_ENABLED = Boolean(process.env.DEBUG_INFO_ENABLED);\r\n// export const SERVER_API_URL = process.env.SERVER_API_URL ?? '';\r\nexport const SERVER_API_URL = 'http://190.226.45.26:82/webapierp/api/'; // TODO: aca se cambia la url base\r\nexport const BUILD_TIMESTAMP = process.env.BUILD_TIMESTAMP;\r\n","import { NgModule, LOCALE_ID } from '@angular/core';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport locale from '@angular/common/locales/es';\r\nimport { BrowserModule, Title } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { FaIconLibrary } from '@fortawesome/angular-fontawesome';\r\nimport { NgxWebstorageModule } from 'ngx-webstorage';\r\nimport * as dayjs from 'dayjs';\r\nimport { NgbDateAdapter, NgbDatepickerConfig } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SERVER_API_URL } from './app.constants';\r\nimport { ApplicationConfigService } from 'app/core/config/application-config.service';\r\nimport './config/dayjs';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\n\r\n// jhipster-needle-angular-add-module-import JHipster will add new module here\r\nimport { NgbDateDayjsAdapter } from './config/datepicker-adapter';\r\nimport { fontAwesomeIcons } from './config/font-awesome-icons';\r\nimport { httpInterceptorProviders } from 'app/core/interceptor/index';\r\n/* import { HomeModule } from './home/home.module';\r\nimport { EntityRoutingModule } from './entities/entity-routing.module';\r\nimport { MainComponent } from './layouts/main/main.component';\r\nimport { NavbarComponent } from './layouts/navbar/navbar.component';\r\nimport { FooterComponent } from './layouts/footer/footer.component';\r\nimport { PageRibbonComponent } from './layouts/profiles/page-ribbon.component';\r\nimport { ErrorComponent } from './layouts/error/error.component';\r\nimport { SidebarComponent } from './layouts/sidebar/sidebar.component';\r\nimport { AppBreadcrumbComponent } from './layouts/breadcrumb/breadcrumb.component';\r\nimport { AppBlankComponent } from './layouts/blank/blank.component';\r\n */\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    SharedModule,\r\n\r\n    // HomeModule,\r\n    // jhipster-needle-angular-add-module JHipster will add new module here\r\n    AppRoutingModule,\r\n\r\n    // EntityRoutingModule,\r\n    // Set this to true to enable service worker (PWA)\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: false }),\r\n    HttpClientModule,\r\n    NgxWebstorageModule.forRoot({ prefix: 'jhi', separator: '-', caseSensitive: true }),\r\n  ],\r\n  providers: [\r\n    Title,\r\n    { provide: LOCALE_ID, useValue: 'es' },\r\n    { provide: NgbDateAdapter, useClass: NgbDateDayjsAdapter },\r\n\r\n    httpInterceptorProviders,\r\n  ],\r\n  declarations: [AppComponent],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {\r\n  constructor(applicationConfigService: ApplicationConfigService, iconLibrary: FaIconLibrary, dpConfig: NgbDatepickerConfig) {\r\n    applicationConfigService.setEndpointPrefix(SERVER_API_URL);\r\n    registerLocaleData(locale);\r\n    iconLibrary.addIcons(...fontAwesomeIcons);\r\n    dpConfig.minDate = { year: dayjs().subtract(100, 'year').year(), month: 1, day: 1 };\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport * as dayjs from 'dayjs';\r\n\r\n@Pipe({\r\n  name: 'formatMediumDatetime',\r\n})\r\nexport class FormatMediumDatetimePipe implements PipeTransform {\r\n  transform(day: dayjs.Dayjs | null | undefined): string {\r\n    return day ? day.format('D MMM YYYY HH:mm:ss') : '';\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[jhiAccordionToggle]',\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(): void {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\n@NgModule({\r\n  exports: [FormsModule, CommonModule, NgbModule, InfiniteScrollModule, FontAwesomeModule, ReactiveFormsModule, FlexLayoutModule],\r\n})\r\nexport class SharedLibsModule {}\r\n","import { Directive, AfterContentChecked } from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[jhiAccordion]',\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks(): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LocalStorageService, SessionStorageService } from 'ngx-webstorage';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\n\r\nimport { ApplicationConfigService } from '../config/application-config.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private localStorage: LocalStorageService,\r\n    private sessionStorage: SessionStorageService,\r\n    private applicationConfigService: ApplicationConfigService\r\n  ) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const serverApiUrl = this.applicationConfigService.getEndpointFor('');\r\n    if (!request.url || (request.url.startsWith('http') && !(serverApiUrl && request.url.startsWith(serverApiUrl)))) {\r\n      return next.handle(request);\r\n    }\r\n\r\n    const token: string | null = this.localStorage.retrieve('authenticationToken') ?? this.sessionStorage.retrieve('authenticationToken');\r\n    if (token) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Directive, HostBinding, Inject, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[jhiAccordionLink]',\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected = false;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AuthInterceptor } from 'app/core/interceptor/auth.interceptor';\r\nimport { AuthExpiredInterceptor } from 'app/core/interceptor/auth-expired.interceptor';\r\nimport { ErrorHandlerInterceptor } from 'app/core/interceptor/error-handler.interceptor';\r\nimport { NotificationInterceptor } from 'app/core/interceptor/notification.interceptor';\r\n\r\nexport const httpInterceptorProviders = [\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true,\r\n  },\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthExpiredInterceptor,\r\n    multi: true,\r\n  },\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: ErrorHandlerInterceptor,\r\n    multi: true,\r\n  },\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: NotificationInterceptor,\r\n    multi: true,\r\n  },\r\n];\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}